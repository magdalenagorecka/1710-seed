{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap ee7d628252a726a5ea8a","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/api/userApi.js","webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","_userApi","getUsers","then","result","userBody","forEach","user","id","firstName","lastName","email","document","getElementById","innerHTML","g","this","Function","eval","e","window","url","fetch","onSuccess","onError","response","json","error","console","log","value","self","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","Error","set","type","rejected","text","decode","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","options","credentials","mode","referrer","form","trim","split","bytes","replace","join","decodeURIComponent","xhr","head","getAllResponseHeaders","header","key","Response","bodyInit","status","ok","statusText","list","push","values","getAll","has","callback","thisArg","keys","entries","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nvar _userApi = __webpack_require__(3);\n\n__webpack_require__(5);\n\n\n(0, _userApi.getUsers)().then(function (result) {\n    var userBody = \"\";\n\n    result.forEach(function (user) {\n        userBody += '<tr>\\n        <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n        <td>' + user.id + '</td>\\n        <td>' + user.firstName + '</td>\\n        <td>' + user.lastName + '</td>\\n        <td>' + user.email + '</td>\\n        </tr>';\n    });\n    global.document.getElementById('users').innerHTML = userBody;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getUsers = getUsers;\n\n__webpack_require__(4);\n\nfunction getUsers() {\n    return get('users');\n}\n\nfunction get(url) {\n    return fetch(url).then(onSuccess, onError);\n}\n\nfunction onSuccess(response) {\n    return response.json();\n}\n\nfunction onError(error) {\n    console.log(error); //eslint-disable-line no-console\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ee7d628252a726a5ea8a","require('./index.css');\nimport {getUsers} from './api/userApi';\n\n\ngetUsers().then(result => {\n    let userBody = \"\";\n\n    result.forEach(user =>{\n        userBody += `<tr>\n        <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n        <td>${user.id}</td>\n        <td>${user.firstName}</td>\n        <td>${user.lastName}</td>\n        <td>${user.email}</td>\n        </tr>`        \n    });\n    global.document.getElementById('users').innerHTML = userBody;\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 1\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","import 'whatwg-fetch';\n\nexport function getUsers(){\n    return get('users');\n}\n\nfunction get(url){\n    return fetch(url).then(onSuccess, onError);\n}\n\nfunction onSuccess(response){\n    return response.json();\n}\n\nfunction onError(error){\n    console.log(error); //eslint-disable-line no-console\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api/userApi.js\n// module id = 3\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}